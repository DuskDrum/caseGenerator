// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.

package example

import (
	"testing"
)

func Test_request_problemRequestResponseVariableParamProblem(t *testing.T) {
	type fields struct {
	}
	type args struct {
		param0 func() (string, string, string, string)
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name: "323fc6c4-00b2-11ef-b5d5-7af6acbff8ed",
			args: args{

				param0: nil,
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			RequestResponseVariableParamProblem(tt.args.param0)

		})
	}
}

func Test_request_problemRequestResponseGenericValueProblem(t *testing.T) {
	type fields struct {
	}
	type args struct {
		param0 func() (*T, bool)
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name: "349f6eec-00b2-11ef-b5d5-7af6acbff8ed",
			args: args{

				param0: nil,
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			RequestResponseGenericValueProblem(tt.args.param0)

		})
	}
}
