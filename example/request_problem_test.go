// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.

package example

import (
	"caseGenerator/utils"
	"testing"
)

func Test_request_problemRequestGenericProblem(t *testing.T) {
	type fields struct {
	}
	type args struct {
		list []any

		process func([]any)

		batchSize int

		param0 []any

		param0 []any
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name: "db99bc3a-1204-11ef-9efb-7af6acbff8ed",
			args: args{

				list: make([]any, 0, 10),

				process: nil,

				batchSize: utils.Empty[int](),

				param0: make([]any, 0, 10),

				param0: make([]any, 0, 10),
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			RequestGenericProblem(tt.args.list, tt.args.process, tt.args.batchSize, tt.args.param0, tt.args.param0)

		})
	}
}
