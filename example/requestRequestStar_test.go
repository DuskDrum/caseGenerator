// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.

package example

import (
	"github.com/samber/lo"
	"testing"
)

func Test_requestRequestStar(t *testing.T) {
	type fields struct {
	}
	type args struct {
		req1 *Example

		req2 *dict.ExampleDict

		req3 []*Example

		req4 *[]Example

		req5 *[]*Example

		req6 *map[string]string

		req7 *map[*Example]map[*dict.ExampleDict][]*Example
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name: "171d24b6-f5a1-11ee-bb29-7af6acbff8ed",
			args: args{

				req1: lo.ToPtr(Example{}),

				req2: lo.ToPtr(dict.ExampleDict{}),

				req3: make([]*Example, 0, 10),

				req4: lo.ToPtr([]Example{}),

				req5: lo.ToPtr([]*Example{}),

				req6: lo.ToPtr(map[string]string{}),

				req7: lo.ToPtr(map[*Example]map[*dict.ExampleDict][]*Example{}),
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			RequestStar(tt.args.req1, tt.args.req2, tt.args.req3, tt.args.req4, tt.args.req5, tt.args.req6, tt.args.req7)

		})
	}
}
