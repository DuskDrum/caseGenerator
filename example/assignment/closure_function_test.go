// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.
// Code generated by codeParser. DO NOT EDIT.

package assignment

import (
	"fmt"
	bytedanceMockey "github.com/bytedance/mockey"
	"testing"
)

func Test_closure_functionClosureFunctionTest1(t *testing.T) {
	type fields struct {
	}
	type args struct {
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name:    "ClosureFunctionTest1",
			args:    args{},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			mock0 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock0.UnPatch()

			mock1 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock1.UnPatch()

			mock2 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock2.UnPatch()

			mock3 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock3.UnPatch()

			mock4 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock4.UnPatch()

			mock5 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock5.UnPatch()

			mock6 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock6.UnPatch()

			mock7 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock7.UnPatch()

			mock8 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock8.UnPatch()

			mock9 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock9.UnPatch()

			mock10 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock10.UnPatch()

			mock11 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock11.UnPatch()

			mock12 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock12.UnPatch()

			mock13 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock13.UnPatch()

			mock14 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock14.UnPatch()

			mock15 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock15.UnPatch()

			mock16 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock16.UnPatch()

			ClosureFunctionTest1()

		})
	}
}

func Test_closure_functionClosureFunctionTest2(t *testing.T) {
	type fields struct {
	}
	type args struct {
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name:    "ClosureFunctionTest2",
			args:    args{},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			mock0 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock0.UnPatch()

			mock1 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock1.UnPatch()

			mock2 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock2.UnPatch()

			mock3 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock3.UnPatch()

			mock4 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock4.UnPatch()

			mock5 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock5.UnPatch()

			mock6 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock6.UnPatch()

			mock7 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock7.UnPatch()

			mock8 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock8.UnPatch()

			mock9 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock9.UnPatch()

			mock10 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock10.UnPatch()

			mock11 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock11.UnPatch()

			mock12 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock12.UnPatch()

			mock13 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock13.UnPatch()

			mock14 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock14.UnPatch()

			mock15 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock15.UnPatch()

			mock16 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock16.UnPatch()

			mock17 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock17.UnPatch()

			mock18 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock18.UnPatch()

			mock19 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock19.UnPatch()

			mock20 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock20.UnPatch()

			mock21 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock21.UnPatch()

			mock22 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock22.UnPatch()

			mock23 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock23.UnPatch()

			mock24 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock24.UnPatch()

			mock25 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock25.UnPatch()

			mock26 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock26.UnPatch()

			mock27 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock27.UnPatch()

			mock28 := bytedanceMockey.Mock(func(int) func(int) int).Return([]any{nil}).Build()
			defer mock28.UnPatch()

			mock29 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock29.UnPatch()

			mock30 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock30.UnPatch()

			mock31 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock31.UnPatch()

			mock32 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock32.UnPatch()

			ClosureFunctionTest2()

		})
	}
}

func Test_closure_functionClosureFunctionTest3(t *testing.T) {
	type fields struct {
	}
	type args struct {
	}
	tests := []struct {
		args    args
		name    string
		fields  fields
		wantErr bool
	}{
		{
			name:    "ClosureFunctionTest3",
			args:    args{},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			defer func() {
				//统一处理
				if err := recover(); err != nil {
					t.Log("recover了")
				}
			}()

			mock0 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock0.UnPatch()

			mock1 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock1.UnPatch()

			mock2 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock2.UnPatch()

			mock3 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock3.UnPatch()

			mock4 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock4.UnPatch()

			mock5 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock5.UnPatch()

			mock6 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock6.UnPatch()

			mock7 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock7.UnPatch()

			mock8 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock8.UnPatch()

			mock9 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock9.UnPatch()

			mock10 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock10.UnPatch()

			mock11 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock11.UnPatch()

			mock12 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock12.UnPatch()

			mock13 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock13.UnPatch()

			mock14 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock14.UnPatch()

			mock15 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock15.UnPatch()

			mock16 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock16.UnPatch()

			mock17 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock17.UnPatch()

			mock18 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock18.UnPatch()

			mock19 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock19.UnPatch()

			mock20 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock20.UnPatch()

			mock21 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock21.UnPatch()

			mock22 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock22.UnPatch()

			mock23 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock23.UnPatch()

			mock24 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock24.UnPatch()

			mock25 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock25.UnPatch()

			mock26 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock26.UnPatch()

			mock27 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock27.UnPatch()

			mock28 := bytedanceMockey.Mock(func(int) func(int) int).Return([]any{nil}).Build()
			defer mock28.UnPatch()

			mock29 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock29.UnPatch()

			mock30 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock30.UnPatch()

			mock31 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock31.UnPatch()

			mock32 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock32.UnPatch()

			mock33 := bytedanceMockey.Mock(func(func(int) int) (int, error)).Return([]any{nil}).Build()
			defer mock33.UnPatch()

			mock34 := bytedanceMockey.Mock(callback).Return([]any{nil}).Build()
			defer mock34.UnPatch()

			mock35 := bytedanceMockey.Mock(performAction).Return([]any{nil, nil}).Build()
			defer mock35.UnPatch()

			mock36 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock36.UnPatch()

			mock37 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock37.UnPatch()

			mock38 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock38.UnPatch()

			mock39 := bytedanceMockey.Mock(func() func() int).Return([]any{nil}).Build()
			defer mock39.UnPatch()

			mock40 := bytedanceMockey.Mock(counter).Return([]any{nil}).Build()
			defer mock40.UnPatch()

			mock41 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock41.UnPatch()

			mock42 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock42.UnPatch()

			mock43 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock43.UnPatch()

			mock44 := bytedanceMockey.Mock(func(int) func(int) int).Return([]any{nil}).Build()
			defer mock44.UnPatch()

			mock45 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock45.UnPatch()

			mock46 := bytedanceMockey.Mock(multiplier).Return([]any{nil}).Build()
			defer mock46.UnPatch()

			mock47 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock47.UnPatch()

			mock48 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock48.UnPatch()

			mock49 := bytedanceMockey.Mock(func(string) func(string)).Return([]any{nil}).Build()
			defer mock49.UnPatch()

			mock50 := bytedanceMockey.Mock(fmt.Println).Return([]any{}).Build()
			defer mock50.UnPatch()

			mock51 := bytedanceMockey.Mock(makePrinter).Return([]any{nil}).Build()
			defer mock51.UnPatch()

			mock52 := bytedanceMockey.Mock(makePrinter).Return([]any{nil}).Build()
			defer mock52.UnPatch()

			mock53 := bytedanceMockey.Mock(printInfo).Return([]any{}).Build()
			defer mock53.UnPatch()

			mock54 := bytedanceMockey.Mock(printWarning).Return([]any{}).Build()
			defer mock54.UnPatch()

			ClosureFunctionTest3()

		})
	}
}
